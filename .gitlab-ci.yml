stages:
  - build
  - test

variables:
  IMAGE_NAME: sdns-new
  DOCKER_REGISTRY: registry.gitlab.com
  DOCKER_TAG_LATEST: latest
  DOCKER_IMAGE: "$DOCKER_REGISTRY/ivannajwan22/sdns-test/$IMAGE_NAME"
  DOCKER_BUILDKIT: 1
  DOCKER_CLI_EXPERIMENTAL: enabled
  DOCKER_PLATFORM: linux/arm64

build_and_push:
  image: docker:27
  stage: build
  services:
    - name: docker:27-dind
      command:
        - "--experimental"
        - "--storage-driver=overlay2"
  before_script:
    - apk add --no-cache git go  # Tambahkan Go untuk go mod tidy
    - git --version
    - go version
    - echo "Logging into GitLab Container Registry..."
    - echo $CI_REGISTRY_PASSWORD | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - |
      if [ $? -ne 0 ]; then
        echo "Login failed, exiting pipeline."
        exit 1
      fi
    - go mod tidy  # Sinkronkan dependensi
  script:
    - |
      BUILD_TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
      VERSION="build-$BUILD_TIMESTAMP"
      echo "Building Docker image version: ${VERSION}"
      docker buildx ls || docker run --rm --privileged tonistiigi/binfmt:latest --install all
      docker buildx use || docker buildx create --use
      docker buildx inspect --bootstrap
      docker buildx build \
        --platform $DOCKER_PLATFORM \
        --push \
        --no-cache \
        --tag $DOCKER_IMAGE:$VERSION \
        --tag $DOCKER_IMAGE:$DOCKER_TAG_LATEST \
        . || { echo "Docker build or push failed"; exit 1; }